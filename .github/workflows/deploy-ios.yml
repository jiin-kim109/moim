name: Deploy iOS

on:
  workflow_run:
    workflows: ["Update Version"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy-ios:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get latest changes after version update
        run: |
          git pull origin main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Setup Expo
        run: npm install -g @expo/cli

      - name: Authenticate with Expo
        run: |
          echo "${{ secrets.EXPO_ACCESS_TOKEN }}" | eas login --non-interactive

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup CocoaPods
        run: |
          cd ios
          pod install

      - name: Build iOS app
        env:
          EXPO_PUBLIC_ENV: production
        run: |
          echo "ðŸ”¨ Building iOS app for production..."
          eas build --platform ios --profile production --local --non-interactive

      - name: Find IPA file
        id: find-ipa
        run: |
          # Find the most recent .ipa file in the current directory
          IPA_FILE=$(find . -name "*.ipa" -type f -exec ls -la {} \; | sort -k 6,7 | tail -n 1 | awk '{print $NF}')
          
          if [ -z "$IPA_FILE" ]; then
            echo "Error: No .ipa file found"
            exit 1
          fi
          
          echo "Found IPA file: $IPA_FILE"
          echo "ipa_path=$IPA_FILE" >> $GITHUB_OUTPUT

      - name: Submit to App Store
        env:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
        run: |
          echo "ðŸ“¤ Submitting to App Store..."
          eas submit -p ios --non-interactive --path "${{ steps.find-ipa.outputs.ipa_path }}"

      - name: Clean up build artifacts
        if: always()
        run: |
          # Clean up large build files to save storage
          rm -f *.ipa
          rm -rf build/

